addHaxeLibrary('Highscore', 'meta.data');

var fuck:FlxBar;
var bluevg:FlxSprite;
var fearNo:Float = 0;
var fearStr:String = "?";
var text:FlxText;
var black:FlxSprite;

function onCreatePost() {

    var fearBarBG:FlxSprite = new FlxSprite().loadGraphic(Paths.image("bar"));
    fearBarBG.cameras = [PlayState.instance.camHUD];
    fearBarBG.scale.set(0.325, 0.325);
    fearBarBG.updateHitbox();
    fearBarBG.screenCenter();
    fearBarBG.x = FlxG.width - (fearBarBG.width * 1.25);

    fuck = new FlxBar(0, 0);
    fuck.createFilledBar(0xFF000000, 0xFF0000FF);
    fuck.cameras = [PlayState.instance.camHUD];
    fuck.angle = 270;
    fuck.scale.set(3.25,2.8);
    fuck.x = fearBarBG.x - 1.25;
    fuck.y = FlxG.height - 370;

    bluevg = new FlxSprite().loadGraphic(Paths.image("blueVG"));
    bluevg.alpha = 0;
    bluevg.cameras = [PlayState.instance.camHUD];

    PlayState.instance.scoreTxt.setFormat(Paths.font("sponge.ttf"), 24, 0xFF0000FF);
    PlayState.instance.scoreTxt.borderColor = 0xFF000000;
    PlayState.instance.scoreTxt.borderSize = 2;
    PlayState.instance.scoreTxt.borderStyle = FlxTextBorderStyle.OUTLINE;
    // FlxG.log.add(PlayState.instance.scoreTxt.borderSize);

    add(fuck);
    add(fearBarBG);
    add(bluevg);
    
    PlayState.instance.allowedToUpdateScoreTXT = false;
    PlayState.instance.introSoundsSuffix = "?";
    updateScoreBarFear();

    black = new FlxSprite(-200, -200);
    black.makeGraphic(1280 * 2, 720 * 2, 0xFF000000);
    black.scrollFactor.set();
    add(black);

    // PlayState.instance.scoreTxt.text = 'Score: ' + PlayState.instance.songScore + ' | Misses: ' + PlayState.instance.songMisses + ' | Rating: ' + PlayState.instance.ratingName + ' | Fear: ' + fearStr;
}

function onUpdate(elapsed){
    FlxG.watch.addQuick("Fear:", fearNo);
    FlxG.watch.addQuick("Health:", PlayState.instance.health);

    fuck.percent = fearNo;

    if(PlayState.instance.health >= 0.1){
        if (fearNo < 25 && fearNo > 0.1){
            PlayState.instance.health -= 0.05* elapsed;
            fearStr = "Normal";
        }
        else if (fearNo >= 25 && fearNo < 50){
            PlayState.instance.health -= 0.075 * elapsed;
            fearStr = "Paranoid";
        }
        else if (fearNo >= 50 && fearNo < 75){
            PlayState.instance.health -= 0.125 * elapsed;
            fearStr = "Scared";
        }
        else if (fearNo >= 75 && fearNo < 100){
            PlayState.instance.health -= 0.175 * elapsed;
            fearStr = "Terrified";
        }else if(fearNo >= 100){
            PlayState.instance.health = 0;
        }
    }

    bluevg.alpha = fearNo * 0.0075;
}

function opponentNoteHit(){
    fearNo += 0.1575;
    // yes this number is a real number
     // no i didnt spam my keyboard
     // i used a calculator
    updateScoreBarFear();
}

function goodNoteHit(){
    fearNo -= 0.15;
    updateScoreBarFear();
    // woud update score text but its a bit fucked
    // PlayState.instance.scoreTxt.text = 'Score: ' + PlayState.instance.songScore + ' | Misses: ' + PlayState.instance.songMisses + ' | Rating: ' + PlayState.instance.ratingName + ' | Fear: ' + fearStr;
}

function onEvent(eventName){
    if(eventName == "Byeeee"){
        FlxTween.tween(black, {alpha: 1}, 1.1, {onComplete: function(tmr:FlxTween){
            FlxTween.tween(PlayState.instance.camHUD, {alpha: 0}, 1.1);
        }});
    }
}

function updateScoreBarFear(){
    PlayState.instance.scoreTxt.text =  'Score: ' + PlayState.instance.songScore + ' | Misses: ' + PlayState.instance.songMisses + ' | Rating: ' + PlayState.instance.ratingName; 
    if(PlayState.instance.ratingName != '?')
        PlayState.instance.scoreTxt.text += ' (' + Highscore.floorDecimal(PlayState.instance.ratingPercent * 100, 2) + '%)' + ' - ' + PlayState.instance.ratingFC;	
}
function onSongStart(){
    FlxTween.tween(black, {alpha: 0}, 2);
}